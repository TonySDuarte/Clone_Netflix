[{"C:\\GitHubDesk\\Clone_Netflix\\frontend\\src\\index.js":"1","C:\\GitHubDesk\\Clone_Netflix\\frontend\\src\\App.js":"2","C:\\GitHubDesk\\Clone_Netflix\\frontend\\src\\Components\\MovieRow\\index.js":"3","C:\\GitHubDesk\\Clone_Netflix\\frontend\\src\\Components\\FeaturedMovie\\index.js":"4","C:\\GitHubDesk\\Clone_Netflix\\frontend\\src\\Services\\api.js":"5","C:\\GitHubDesk\\Clone_Netflix\\frontend\\src\\Components\\Header\\index.js":"6"},{"size":197,"mtime":1611503541472,"results":"7","hashOfConfig":"8"},{"size":2127,"mtime":1611799839353,"results":"9","hashOfConfig":"8"},{"size":1795,"mtime":1611800197698,"results":"10","hashOfConfig":"8"},{"size":1987,"mtime":1611794437825,"results":"11","hashOfConfig":"8"},{"size":2590,"mtime":1611795761074,"results":"12","hashOfConfig":"8"},{"size":513,"mtime":1611796407006,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"2jruo0",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},"C:\\GitHubDesk\\Clone_Netflix\\frontend\\src\\index.js",[],["33","34"],"C:\\GitHubDesk\\Clone_Netflix\\frontend\\src\\App.js",["35"],"import React, { useEffect, useState } from 'react';\nimport FeaturedMovie from './Components/FeaturedMovie';\nimport MovieRow from './Components/MovieRow';\nimport './App.css'\nimport Tmdb from './Services/api';\nimport Header from './Components/Header';\n\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n\n  useEffect(() => {\n    const loadAll = async () => {\n      // Pegando toda a lista\n      let list = await Tmdb.getHomeList();\n      setMovieList(list)\n\n      // Pegando filme em destaque\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n    }\n\n    loadAll()\n  }, [])\n\n  useEffect(() => {\n    const scrollListener = () => {\n      if (window.scrollY > 10) {\n        setBlackHeader(true)\n      } else {\n        setBlackHeader(false)\n      }\n    }\n\n    window.addEventListener('scroll', scrollListener)\n    return () => {\n      window.removeEventListener('scroll', scrollListener)\n    }\n  })\n\n  return (\n    <div className=\"page\">\n      <Header black={blackHeader} />\n\n      {featuredData &&\n        <FeaturedMovie item={featuredData} />\n      }\n\n      <section className=\"lists\">\n        {movieList.map((item, key) => (\n          <MovieRow key={key} title={item.title} items={item.items} />\n        ))}\n      </section>\n\n      <footer>\n        Feito em Live (https://www.youtube.com/watch?v=tBweoUiMsDg) para estudo de react, todos os direitos das imagens são da Netflix.\n        Dados Extraidos de https://www.themoviedb.org/\n        Tony Sandro\n      </footer>\n\n      {movieList.length <= 0 &&\n        <div className=\"loading\">\n          <img src=\"https://cdn.lowgif.com/small/0534e2a412eeb281-the-counterintuitive-tech-behind-netflix-s-worldwide.gif\" alt=\"loading\"></img>\n        </div>\n      }\n\n    </div>\n  );\n}\n","C:\\GitHubDesk\\Clone_Netflix\\frontend\\src\\Components\\MovieRow\\index.js",["36"],"import React, { useState } from \"react\";\r\nimport './style.css'\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nexport default ({ title, items }) => {\r\n    const [scrollX, setScrollX] = useState(-400)\r\n\r\n    const handleLeftArrow = () => {\r\n        let x = scrollX + Math.round(window.innerWidth / 2);\r\n        if (x > 0) {\r\n            x = 0;\r\n        }\r\n\r\n        setScrollX(x);\r\n    }\r\n\r\n    const handleRightArrow = () => {\r\n        let x = scrollX - Math.round(window.innerWidth / 2);\r\n        let listW = items.results.length * 150;\r\n        if (window.innerWidth - listW > x) {\r\n            x = (window.innerWidth - listW) - 60;\r\n        }\r\n\r\n        setScrollX(x);\r\n    }\r\n\r\n    return (\r\n        <div className='movieRow'>\r\n            <h2>{title}</h2>\r\n\r\n            <div className=\"movieRow-left\" onClick={handleLeftArrow}>\r\n                <NavigateBeforeIcon style={{ fontSize: 50 }} />\r\n            </div>\r\n            <div className=\"movieRow-right\" onClick={handleRightArrow}>\r\n                <NavigateNextIcon style={{ fontSize: 50 }} />\r\n            </div>\r\n\r\n            <div className=\"movieRow--listarea\">\r\n                <div className=\"movieRow--list\" style={{\r\n                    marginLeft: scrollX,\r\n                    width: items.results.length * 150\r\n                }}>\r\n\r\n                    {items.results.length > 0 && items.results.map((item, key) => (\r\n                        <div className=\"movieRow--item\" key={key}>\r\n                            <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\GitHubDesk\\Clone_Netflix\\frontend\\src\\Components\\FeaturedMovie\\index.js",["37","38"],"import React from 'react'\r\nimport './style.css'\r\n\r\nexport default ({ item }) => {\r\n    let firstDate = new Date(item.first_air_date)\r\n    let genres = []\r\n\r\n    for (let i in item.genres) {\r\n        genres.push(item.genres[i].name)\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"featured\"\r\n            style={{\r\n                backgroundSize: 'cover',\r\n                backgroundPosition: 'center',\r\n                backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n            }}>\r\n\r\n            <div className=\"featured--vertical\">\r\n                <div className=\"featured--horizontal\">\r\n                    <div className=\"featured--name\">{item.original_name}</div>\r\n                    <div className=\"featured--info\">\r\n                        <div className=\"featured--points\">\r\n                            {item.vote_average}\r\n                        </div>\r\n\r\n                        <div className=\"featured--year\">\r\n                            {firstDate.getFullYear()}\r\n                        </div>\r\n\r\n                        <div className=\"featured--seasons\">\r\n                            {item.number_of_seasons} temporada{item.number_of_seasons != 1 ? 's' : ''}\r\n                        </div>\r\n\r\n                        <div className=\"featured--description\">\r\n                            {item.overview}\r\n                        </div>\r\n\r\n                        <div className=\"featured--buttons\">\r\n                            <a href={`/watch/${item.id}`} className=\"featured--watchbutton\" >► Assistir</a>\r\n                            <a href={`/list/add/${item.id}`} className=\"featured--mylistbutton\">+ Minha Lista</a>\r\n                        </div>\r\n\r\n                        <div className=\"featured--genres\">\r\n                            <strong>Gêneros:</strong> {genres.join(', ')}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","C:\\GitHubDesk\\Clone_Netflix\\frontend\\src\\Services\\api.js",["39"],"const API_KEY = '1e14435606350ff990a898a37d929d31'\r\nconst API_BASE = 'https://api.themoviedb.org/3'\r\n\r\n\r\nconst basicFecth = async (endpoint) => {\r\n    const req = await fetch(`${API_BASE}${endpoint}`)\r\n    const json = await req.json();\r\n    return json\r\n}\r\n\r\nexport default {\r\n    getHomeList: async () => {\r\n        return [\r\n            {\r\n                slug: 'originals',\r\n                title: \"Originais do Netflix\",\r\n                items: await basicFecth(`/discover/tv/?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: \"Recomendados para Você\",\r\n                items: await basicFecth(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title: \"Em Alta\",\r\n                items: await basicFecth(`/movie/top_rated?&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: \"Ação\",\r\n                items: await basicFecth(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: \"Comédia\",\r\n                items: await basicFecth(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title: \"Terror\",\r\n                items: await basicFecth(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: \"Romance\",\r\n                items: await basicFecth(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'documentary',\r\n                title: \"Documentários\",\r\n                items: await basicFecth(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n        ]\r\n    },\r\n\r\n    getMovieInfo: async (movieId, type) => {\r\n        let info = {}\r\n\r\n        if (movieId) {\r\n            switch (type) {\r\n                case 'movie':\r\n                    info = await basicFecth(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n                    break;\r\n\r\n                case 'tv':\r\n                    info = await basicFecth(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return info\r\n    }\r\n}","C:\\GitHubDesk\\Clone_Netflix\\frontend\\src\\Components\\Header\\index.js",["40","41","42"],"import React from 'react'\r\nimport './style.css'\r\n\r\nexport default ({ black }) => {\r\n    return (\r\n        <header className={black ? \"black\" : ''}>\r\n            <div className=\"header--logo\">\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/0f/Logo_Netflix.png\" />\r\n            </div>\r\n            <div className=\"header--user\">\r\n                <img src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" />\r\n            </div>\r\n        </header>\r\n    )\r\n}",["43","44"],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":9,"column":1,"nodeType":"51","endLine":75,"endColumn":2},{"ruleId":"49","severity":1,"message":"50","line":6,"column":1,"nodeType":"51","endLine":54,"endColumn":2},{"ruleId":"49","severity":1,"message":"50","line":4,"column":1,"nodeType":"51","endLine":54,"endColumn":2},{"ruleId":"52","severity":1,"message":"53","line":34,"column":87,"nodeType":"54","messageId":"55","endLine":34,"endColumn":89},{"ruleId":"49","severity":1,"message":"56","line":11,"column":1,"nodeType":"51","endLine":77,"endColumn":2},{"ruleId":"49","severity":1,"message":"50","line":4,"column":1,"nodeType":"51","endLine":15,"endColumn":2},{"ruleId":"57","severity":1,"message":"58","line":8,"column":17,"nodeType":"59","endLine":8,"endColumn":99},{"ruleId":"57","severity":1,"message":"58","line":11,"column":17,"nodeType":"59","endLine":11,"endColumn":108},{"ruleId":"45","replacedBy":"60"},{"ruleId":"47","replacedBy":"61"},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Assign object to a variable before exporting as module default","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["62"],["63"],"no-global-assign","no-unsafe-negation"]